#ifndef _COMMON_DEFINE_H_
#define _COMMON_DEFINE_H_

#define MAX_RECIPE_COUNT		1000

//Set Time-Out
#define TIME_OUT_CYLINDER	(30 * 1000)			// mse
#define TIME_OUT_MOTION		(3 * 60 * 1000)	// msec
#define TIME_OUT_FORCE_CONTROL		(20 * 60 * 1000)	// msec
#define TIME_OUT_DUAL		(60 * 60 * 1000)	// msec
#define TIME_OUT_STATE		(1 * 60 * 1000)	// msec 5Min.
#define TIME_OUT_WELDING	(1 * 20 * 1000)	// msec
#define TIME_OUT_MOTION_X	(1 * 60 * 1000)	// msec
#define TIME_OUT_COMUNICATION (3  * 1000)	// msec
#define TIME_OUT_PROCESSING (5 * 1000) //msec

#define TIME_OUT_MAPPING		(48 * 60 * 60 * 1000)	// msec

#define TIME_OUT_PULSE (3  * 100)	// msec

#define TIME_OUT_DELAY (30*1000) //msec

#define TIME_OUT_LOADING_DELAY (15*1000) //msec

#define TIME_OUT_ROBOT_INTERFACE (10 * 60 * 1000)	// msec)

#define TIME_OUT_STRETCH_ZERO	(5  * 1000)		// msec
#define TIME_OUT_STRETCH	(1 * 15 * 1000)		// msec
#define TIME_OUT_ORIGIN		(2 * 60 * 1000)		// msec
#define TIME_OUT_STANDBY	TIME_OUT_MOTION		//( 1 * 60 * 1000)   // msec
#define TIME_OUT_UNCLAMP	(1 * 5 * 1000)		// msec

#define MAX_RECIPE_COUNT	1000

#define CLAMP_OFF_DELAY		1000
#define IMAGE_FOCUS_DELAY			500
#define AIR_FLOATING_STOP_DELAY		2000

#define PI				3.14159265358979323846264338
#define RADIAN			(PI / 180.0)
#define DEGREE			(180.0 / PI)
#define LASER_FOCUS_VEL	100
#define REVERSE			-1

#define UMAC_CONTROL_AXIS					0
#define UMAC_VERTUAL						1	
#define UMAC_REAL_AXIS						2
#define UMAC_PLC_NO							3
#define UMAC_HOME_NO						4
#define UMAC_HOME_NO_SLAVE					5
#define UMAC_RESOLUTION						6

#define	Use									1
#define NoUse								-1

#define COM_BUF_SIZE 2048

#define MAX_FRAME_FLATNESS_POINTS_NUM 100

#define MAX_MOTOR_NUM 52

#define MAX_STICK_NUM 100
#define MAX_WELDING_NUM 100
#define	MAX_CELL_X_COUNT 9
#define MAX_CELL_Y_COUNT 9

#define	MAX_UVW_NUM				1

#define MAX_WELDING_SCHEDULE_COUNT 32
#define MAX_WELDING_METHOD2_COUNT 32
#define MAX_SUB_WELDING_COUNT 32
///////////////////////////////////////////////////

#define _TAB_ITEM_SIZE_X	120

#define MAX_UMAC_AXIS_SIZE 42
#define MAX_AXIS_SIZE		75

//My
#define	GRIPPER_ROW	8
#define CELL_X_COUNT_MAX 6
#define CELL_Y_COUNT_MAX 1
#define STRETCH_STEP_MAX 10
#define MAX_DINPUT_SIZE 192
#define MAX_DOUTPUT_SIZE 128
#define MAX_DOUTPUT_DWORD_SIZE			6
#define MAX_DINPUT_DWORD_SIZE			6
#define MAX_AINPUT_SIZE					64
#define MAX_AOUTPUT_SIZE				16
#define MAX_VISION_AXIS_SIZE	4
#define MASK_IN_BOX_COUNT 10
#define CASSETTE_ROW 6
#define CASSETTE_SLOT 5
#define MAX_STRETCH_AXIS_SIZE			10
#define MAX_FORCE_CONTROL_SIZE			8
#define MAX_COUNTER_FORCE_AXIS_SIZE		2
#define MAX_CF_NUM						6
#define MAX_CENTERING_NUM				4
#define MAX_SF_NUM						16

// owk : 축제어 타입을 구분
#define AXIS_TYPE_DIRECT_AJIN 0			
#define AXIS_TYPE_REMOTE_UMAC 1
#define AXIS_TYPE_REMOTE_AJIN 2

#define FILE_DATAMODEL _T("DataModel.xml") 

#define DIO_MODULE_SIZE	32
#define AI_MODULE_SIZE	16
#define DI_MODULE_CNT	6
#define DO_MODULE_CNT	4
#define AI_MODULE_CNT	4

#define POSITION_COUNT				5		//포지션 갯수

#define	MAX_GAP_SENSOR		6
#define	MAX_AIR_REGULATOR	6

enum eGripper_Clamp_Mode
{
	_eCLAMP_FIRST = 0,
	_eCLAMP_SECOND,
	_eCLAMP_ALL
};

enum eMask_Mode
{
	_eMASK_MODE_COVER = 0,
	_eMASK_MODE_HOWLING,
};
enum MOTION_MODE
{
	eMOTION_ABS = 0,
	eMOTION_REL,
	eMOTION_VEL,
	eMOTION_MAX,
};

//축 리스트 - 전체
typedef enum
{
	AXIS_NONE = -1,

	AXIS_GANTRY_YL = 0, //Y1										
	AXIS_GANTRY_YR,	   //Y2
	AXIS_GANTRY_X,
	AXIS_CAMERA_Z1, //PreAlign + Review Z
	AXIS_CAMERA_Z2, //AOI Z
	AXIS_CAMERA_Z3, //None
	AXIS_LOADER_Z,									//SM7
	AXIS_BACKLIGHT_X,								//SM8
	AXIS_GRIPPER_CLAMP_L1,						//SM9
	AXIS_GRIPPER_CLAMP_L2,						//SM10
	AXIS_GRIPPER_CLAMP_L3,						//SM11
	AXIS_GRIPPER_CLAMP_L4,						//SM12
	AXIS_GRIPPER_CLAMP_L5,						//SM13
	AXIS_GRIPPER_CLAMP_L6,						//SM14
	AXIS_GRIPPER_CLAMP_L7,						//SM15
	AXIS_GRIPPER_CLAMP_L8,						//SM16
	AXIS_GRIPPER_CLAMP_R1,						//SM17
	AXIS_GRIPPER_CLAMP_R2,						//SM18
	AXIS_GRIPPER_CLAMP_R3,						//SM19
	AXIS_GRIPPER_CLAMP_R4,						//SM20
	AXIS_GRIPPER_CLAMP_R5,						//SM21
	AXIS_GRIPPER_CLAMP_R6,						//SM22
	AXIS_GRIPPER_CLAMP_R7,						//SM23
	AXIS_GRIPPER_CLAMP_R8,						//SM24
	AXIS_GRIPPER_STRETCH_L1,						//SM25
	AXIS_GRIPPER_STRETCH_L2,						//SM26
	AXIS_GRIPPER_STRETCH_L3,						//SM27
	AXIS_GRIPPER_STRETCH_L4,						//SM28
	AXIS_GRIPPER_STRETCH_L5,						//SM29
	AXIS_GRIPPER_STRETCH_L6,						//SM30
	AXIS_GRIPPER_STRETCH_L7,						//SM31
	AXIS_GRIPPER_STRETCH_L8,						//SM32
	AXIS_GRIPPER_STRETCH_R1,						//SM33
	AXIS_GRIPPER_STRETCH_R2,						//SM34
	AXIS_GRIPPER_STRETCH_R3,						//SM35
	AXIS_GRIPPER_STRETCH_R4,						//SM36
	AXIS_GRIPPER_STRETCH_R5,						//SM37
	AXIS_GRIPPER_STRETCH_R6,						//SM38
	AXIS_GRIPPER_STRETCH_R7,						//SM39
	AXIS_GRIPPER_STRETCH_R8,						//SM40
	AXIS_GRIPPER_PITCH_L1,						//SM41
	AXIS_GRIPPER_PITCH_L2,						//SM42
	AXIS_GRIPPER_PITCH_L3,						//SM43
	AXIS_GRIPPER_PITCH_L4,						//SM44
	AXIS_GRIPPER_PITCH_L5,						//SM45
	AXIS_GRIPPER_PITCH_L6,						//SM46
	AXIS_GRIPPER_PITCH_L7,						//SM47
	AXIS_GRIPPER_PITCH_L8,						//SM48
	AXIS_GRIPPER_PITCH_R1,						//SM49
	AXIS_GRIPPER_PITCH_R2,						//SM50
	AXIS_GRIPPER_PITCH_R3,						//SM51
	AXIS_GRIPPER_PITCH_R4,						//SM52
	AXIS_GRIPPER_PITCH_R5,						//SM53
	AXIS_GRIPPER_PITCH_R6,						//SM54
	AXIS_GRIPPER_PITCH_R7,						//SM55
	AXIS_GRIPPER_PITCH_R8,						//SM56
	AXIS_GRIPPER_WEDGE_ZL, //Gripper Left Z						//SM57
	AXIS_GRIPPER_WEDGE_ZR, //Gripper Right Z						//SM58
	AXIS_BOX_ALIGN_CAMERA_YL, //Y1						//SM59
	AXIS_BOX_ALIGN_CAMERA_YR, //Y2						//SM60
	AXIS_3D_CAMERA_MAIN_Z, //Z1 //1차 하강용. 약 200mm. Actuator + Servo						//SM61
	//AXIS_3D_CAMERA_SUB_Z,  //Z2 //2차 하강용. 약 40mm . Linear Servo //미사용			
	AXIS_UNLOADER_Z,						//SM63
	AXIS_UNLOADER_YL, //Y1						//SM64
	AXIS_UNLOADER_YR, //Y2						//SM65
	AXIS_MAGAZINE_LIFT_Z,						//SM66
	AXIS_INKJET_Y,										//SM67

	//Stepping Motor
	AXIS_LOADER_X,									//Axis060
	AXIS_LOADING_STAGE_X1,									//Axis061
	AXIS_LOADING_STAGE_X2,									//Axis062
	AXIS_LOADING_STAGE_Y,									//Axis063
	AXIS_INSPECTION_STAGE_X,									//Axis064
	AXIS_INSPECTION_STAGE_Y1,									//Axis065
	AXIS_INSPECTION_STAGE_Y2,									//Axis066
	AXIS_UNLOADER_X,													//Axis67

	AXIS_VIRTUAL_GANTRY_Y,

	AXIS_MAX,
}enum_Axis;

typedef enum
{
	eGRIPPER_ROW1 = 0,
	eGRIPPER_ROW2,
	eGRIPPER_ROW3,
	eGRIPPER_ROW4,
	eGRIPPER_ROW5,
	eGRIPPER_ROW6,
	eGRIPPER_ROW7,
	eGRIPPER_ROW8,
}enum_Gripper_Row;

typedef enum
{
	REMOTE_AXIS_UMAC_NONE = -1,

	REMOTE_AXIS_UMAC_GANTRY_YL = 0, //Y1
	REMOTE_AXIS_UMAC_GANTRY_YR,	   //Y2
	REMOTE_AXIS_UMAC_GANTRY_X,

	REMOTE_AXIS_UMAC_VIRTUAL_GANTRY_Y,

	REMOTE_AXIS_UMAC_MAX,
}enum_REMOTE_AXIS_UMAC;

typedef enum
{
	DIRECT_AXIS_AJIN_CAMERA_Z1 = 0, //PreAlign + Review Z
	DIRECT_AXIS_AJIN_CAMERA_Z2, //AOI Z

	DIRECT_AXIS_AJIN_MAX,
}enum_DIRECT_AXIS_AJIN;

typedef enum
{
	REMOTE_AXIS_AJIN_LOADER_Z = 0,
	REMOTE_AXIS_AJIN_BACKLIGHT_X,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_L1,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_L2,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_L3,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_L4,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_L5,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_L6,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_L7,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_L8,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_R1,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_R2,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_R3,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_R4,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_R5,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_R6,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_R7,
	REMOTE_AXIS_AJIN_GRIPPER_CLAMP_R8,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_L1,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_L2,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_L3,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_L4,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_L5,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_L6,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_L7,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_L8,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_R1,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_R2,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_R3,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_R4,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_R5,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_R6,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_R7,
	REMOTE_AXIS_AJIN_GRIPPER_STRETCH_R8,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_L1,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_L2,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_L3,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_L4,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_L5,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_L6,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_L7,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_L8,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_R1,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_R2,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_R3,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_R4,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_R5,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_R6,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_R7,
	REMOTE_AXIS_AJIN_GRIPPER_PITCH_R8,
	REMOTE_AXIS_AJIN_GRIPPER_WEDGE_ZL, //Gripper Left Z
	REMOTE_AXIS_AJIN_GRIPPER_WEDGE_ZR, //Gripper Right Z
	REMOTE_AXIS_AJIN_BOX_ALIGN_CAMERA_YL, //Y1
	REMOTE_AXIS_AJIN_BOX_ALIGN_CAMERA_YR, //Y2
	REMOTE_AXIS_AJIN_3D_CAMERA_Z1, //1차 하강용. 약 200mm. Actuator + Servo
	REMOTE_AXIS_AJIN_3D_CAMERA_Z2, //2차 하강용. 약 40mm . Linear Servo
	REMOTE_AXIS_AJIN_UNLOADER_Z,
	REMOTE_AXIS_AJIN_UNLOADER_YL, //Y1
	REMOTE_AXIS_AJIN_UNLOADER_YR, //Y2
	REMOTE_AXIS_AJIN_MAGAZINE_LIFT_Z,
	REMOTE_AXIS_AJIN_INKJET_Y,

	//Stepping Motor
	REMOTE_AXIS_AJIN_LOADER_X,
	REMOTE_AXIS_AJIN_LOADING_STAGE_X1,
	REMOTE_AXIS_AJIN_LOADING_STAGE_X2,
	REMOTE_AXIS_AJIN_LOADING_STAGE_Y,
	REMOTE_AXIS_AJIN_INSPECTION_STAGE_X,
	REMOTE_AXIS_AJIN_INSPECTION_STAGE_Y1,
	REMOTE_AXIS_AJIN_INSPECTION_STAGE_Y2,
	REMOTE_AXIS_AJIN_UNLOADER_X,

	REMOTE_AXIS_AJIN_MAX,
}enum_REMOTE_AXIS_AJIN;

//DINPUT
typedef enum
{
	_DIN_SMPS_01_MAIN_POWER = 0,
	_DIN_SMPS_02_SAFETY_POWER,
	_DIN_SMPS_03_BREAK_POWER,
	_DIN_SMPS_04_CAMERA_DC_POWER_12V,
	_DIN_IO_DC24V_POWER_MODULE,
	_DIN_FAN_LC_INDICATOR_DC_POWER,
	_DIN_SAFETY_DC_POWER,
	_DIN_BREAK_DC_POWER,
	_DIN_CAMERA_DC_POWER_12V_POWER,
	_DIN_SMPS_05_CAMERA_DC_POWER_5V,
	_DIN_CAMERA_DC_POWER_5V_POWER,
	_DIN_11,
	_DIN_12,
	_DIN_GCP01_POWER_LINE_CP,
	_DIN_14,
	_DIN_15,
	_DIN_16,
	_DIN_GCP10_SERVO_AC_POWER_MC_OP,
	_DIN_GCP11_FFU_CP,
	_DIN_19,
	_DIN_ELCB_01_UPS_POWER_ELB_PC_MONITOR_POWER,
	_DIN_PC_CONCENT_POWER,
	_DIN_DC_POWER_LINE,
	_DIN_GPS_EXCEPTION_CIRCUIT,
	_DIN_CONTROL_AC220V_POWER,
	_DIN_ELCD_12_WELDING1_AC220V_POWER,
	_DIN_26,
	_DIN_ELCD_14_AIR_DRAIN_AC220V_POWER,
	_DIN_28,
	_DIN_29,
	_DIN_30,
	_DIN_31,

	_DIN_ELCB_20_UCP_GANTRY_Y2_X1_CAMERA_Z1_Z2_POWER = 100,
	_DIN_ELCB_21_CAMERA_Z3_IN_TRNS_Z_BACK_LIGHT_X_POWER,
	_DIN_ELCB_22_GRIPPER_CLAMP_STRETCH_L_R_POWER,
	_DIN_ELCB_23_GRIPPER_PITCH_L_R_POWER,
	_DIN_ELCB_24_GRIPPER_Z_R1_L1_CAMERA_Y1_Y2_POWER,
	_DIN_ELCB_25_3D_CAMERA_Z1_Z2_OUT_TRNS_Z_Y1_Y2_POWER,
	_DIN_ELCB_26_MAGAZINE_LIFT_Z_POWER,
	_DIN_ELCB_27_INKJET_IN_TRANSFER_UVW_MaskBoxAlign_UVW_INSPECTION_STAGE_OUT_TRANSFER_POWER,
	_DIN_108,
	_DIN_109,
	_DIN_110,
	_DIN_111,
	_DIN_112,
	_DIN_113,
	_DIN_114,
	_DIN_115,
	_DIN_116,
	_DIN_117,
	_DIN_118,
	_DIN_EMO_1_ON,
	_DIN_EMO_2_ON,
	_DIN_EMO_3_ON,
	_DIN_EMS_1_ON,
	_DIN_EMS_2_ON,
	_DIN_EMS_3_ON,
	_DIN_EMS_4_ON,
	_DIN_DOOR_1_OPEN,
	_DIN_DOOR_2_OPEN,
	_DIN_DOOR_3_OPEN,
	_DIN_DOOR_4_OPEN,
	_DIN_VSP_RUN,
	_DIN_VSP_FAULT,

	_DIN_200 = 200,
	_DIN_201,
	_DIN_202,
	_DIN_203,
	_DIN_204,
	_DIN_205,
	_DIN_206,
	_DIN_207,
	_DIN_208,
	_DIN_209,
	_DIN_210,
	_DIN_211,
	_DIN_212,
	_DIN_213,
	_DIN_214,
	_DIN_215,
	_DIN_216,
	_DIN_217,
	_DIN_218,
	_DIN_219,
	_DIN_220,
	_DIN_221,
	_DIN_222,
	_DIN_223,
	_DIN_EQUIPMENT_INTREFACE_1,
	_DIN_EQUIPMENT_INTREFACE_2,
	_DIN_EQUIPMENT_INTREFACE_3,
	_DIN_EQUIPMENT_INTREFACE_4,
	_DIN_EQUIPMENT_INTREFACE_5,
	_DIN_EQUIPMENT_INTREFACE_6,
	_DIN_EQUIPMENT_INTREFACE_7,
	_DIN_EQUIPMENT_INTREFACE_8,

	_DIN_IN_TRANSFER_CYLINDER_DOWN_L = 300,
	_DIN_IN_TRANSFER_CYLINDER_UP_L,
	_DIN_IN_TRANSFER_CYLINDER_DOWN_R,
	_DIN_IN_TRANSFER_CYLINDER_UP_R,
	_DIN_TABLE_UP_LEFT_FRONT_1,
	_DIN_TABLE_DOWN_LEFT_FRONT_1,
	_DIN_TABLE_UP_LEFT_BACK_2,
	_DIN_TABLE_DOWN_LEFT_BACK_2,
	_DIN_TABLE_UP_RIGHT_FRONT_1,
	_DIN_TABLE_DOWN_RIGHT_FRONT_1,
	_DIN_TABLE_UP_RIGHT_BACK_2,
	_DIN_TABLE_DOWN_RIGHT_BACK_2,
	_DIN_TABLE_CENTERING_FWD_L,
	_DIN_TABLE_CENTERING_BWD_L,
	_DIN_TABLE_CENTERING_FWD_R,
	_DIN_TABLE_CENTERING_BWD_R,
	_DIN_MASK_TRAY_DETECT_1,
	_DIN_MASK_TRAY_DETECT_2,
	_DIN_PICK_UP_FWD,
	_DIN_PICK_UP_BWD,
	_DIN_MAGAZINE_1_FLOOR_DETECT, //상부
	_DIN_MAGAZINE_2_FLOOR_DETECT, //중상
	_DIN_MAGAZINE_3_FLOOR_DETECT, //중하
	_DIN_MAGAZINE_4_FLOOR_DETECT, //하부
	_DIN_324,
	_DIN_325,
	_DIN_326,
	_DIN_SIDE_DOOR_L,
	_DIN_SIDE_DOOR_R,
	_DIN_AIR_DRYER_1_ALARM,
	_DIN_AIR_DRYER_2_ALARM,
	_DIN_GANTRY_OUT_TRANSFER_COLLISION_AVOIDANCE_SENSOR, //충돌방지 센서


	_DIN_CDA_MAIN_AIR = 400,
	_DIN_TRANSFER_VAC_PAD_1_INPUT,
	_DIN_TRANSFER_VAC_PAD_2_INPUT,
	_DIN_TRANSFER_VAC_PAD_3_INPUT,
	_DIN_TRANSFER_VAC_PAD_4_INPUT,
	_DIN_TRANSFER_VAC_PAD_1_OUTPUT,
	_DIN_TRANSFER_VAC_PAD_2_OUTPUT,
	_DIN_TRANSFER_VAC_PAD_3_OUTPUT,
	_DIN_TRANSFER_VAC_PAD_4_OUTPUT,
	_DIN_INSTABLE_STAGE_VAC_INSIDE,
	_DIN_INSTABLE_STAGE_VAC_OUTSIDE,
	_DIN_411,
	_DIN_412,
	_DIN_413,
	_DIN_414,
	_DIN_415,
	_DIN_416,
	_DIN_417,
	_DIN_418,
	_DIN_419,
	_DIN_MAIN_AIR_PRESSURE,
	_DIN_SUPPLY_PRESSURE,
	_DIN_GANTRY_X_AXIS_1_PRESSURE,
	_DIN_GANTRY_X_AXIS_2_PRESSURE,
	_DIN_GANTRY_Y_AXIS_1_PRESSURE,
	_DIN_GANTRY_Y_AXIS_2_PRESSURE,
	_DIN_ISOLATOR_1_PRESSURE_ACT_H,
	_DIN_ISOLATOR_2_PRESSURE_ACT_V,
	_DIN_GANTRY_REGULATOR_Y1,
	_DIN_GANTRY_REGULATOR_Y2,
	_DIN_GANTRY_REGULATOR_X_TOP,
	_DIN_GANTRY_REGULATOR_X_BOTTOM,

	//기존꺼. 나중에 없으면 지울거
	_DIN_SEPARAT_PLATE_BACK,

	_DIN_MAX,
}enum_Di;

//DOUTPUT
typedef enum
{
	_DOUT_MC_20_UCP_GANTRY_Y2_M_X1_R_CAMERA_Z1_Z2_POWER = 0,
	_DOUT_MC_21_CAMERA_Z3_IN_TRNS_Z_BACK_LIGHT_X_POWER,
	_DOUT_MC_22_GRIPPER_CLAMP_STRETCH_L_R_POWER,
	_DOUT_MC_23_GRIPPER_PITCH_L_R_POWER,
	_DOUT_MC_24_GRIPPER_Z_R1_L1_CAMERA_Y1_Y2_POWER,
	_DOUT_MC_25_3D_CAMERA_Z1_Z2_OUT_TRNS_Z_Y1_Y2_POWER,
	_DOUT_MC_26_MAGAZINE_LIFT_Z_POWER,
	_DOUT_MC_27_INKJET_IN_TRANSFER_UVW_MASK_BOX_ALIGN_UVW_INSPECTION_STAGE_OUT_TRANSFER_POWER,
	_DOUT_8,
	_DOUT_9,
	_DOUT_10,
	_DOUT_11,
	_DOUT_12,
	_DOUT_13,
	_DOUT_14,
	_DOUT_15,
	_DOUT_16,
	_DOUT_17,
	_DOUT_18,
	_DOUT_19,
	_DOUT_20,
	_DOUT_DOOR_1_OPEN_SOL,
	_DOUT_DOOR_2_OPEN_SOL,
	_DOUT_DOOR_3_OPEN_SOL,
	_DOUT_DOOR_4_OPEN_SOL,
	_DOUT_BUZZER_MELODY_1,
	_DOUT_BUZZER_MELODY_2,
	_DOUT_BUZZER_MELODY_3,
	_DOUT_BUZZER_MELODY_4,
	_DOUT_TOWER_SIGNAL_LAMP_RED,
	_DOUT_TOWER_SIGNAL_LAMP_YELLOW,
	_DOUT_TOWER_SIGNAL_LAMP_GREEN,

	_DOUT_100 = 100,
	_DOUT_101,
	_DOUT_102,
	_DOUT_103,
	_DOUT_104,
	_DOUT_105,
	_DOUT_106,
	_DOUT_107,
	_DOUT_108,
	_DOUT_109,
	_DOUT_110,
	_DOUT_111,
	_DOUT_112,
	_DOUT_113,
	_DOUT_114,
	_DOUT_115,
	_DOUT_116,
	_DOUT_117,
	_DOUT_118,
	_DOUT_119,
	_DOUT_120,
	_DOUT_121,
	_DOUT_122,
	_DOUT_123,
	_DOUT_EQUIPMENT_INTREFACE_1,
	_DOUT_EQUIPMENT_INTREFACE_2,
	_DOUT_EQUIPMENT_INTREFACE_3,
	_DOUT_EQUIPMENT_INTREFACE_4,
	_DOUT_EQUIPMENT_INTREFACE_5,
	_DOUT_EQUIPMENT_INTREFACE_6,
	_DOUT_EQUIPMENT_INTREFACE_7,
	_DOUT_EQUIPMENT_INTREFACE_8,

	_DOUT_CLAMP_ON = 200,
	_DOUT_CLAMP_OFF,
	_DOUT_PICK_UP_FW,
	_DOUT_PICK_UP_BW,
	_DOUT_TABLE_UP,
	_DOUT_TABLE_DOWN,
	_DOUT_TABLE_OUT,
	_DOUT_TABLE_IN,
	_DOUT_SEPARATE_UP,
	_DOUT_SEPARATE_DOWN,
	_DOUT_210,
	_DOUT_211,
	_DOUT_212,
	_DOUT_213,
	_DOUT_214,
	_DOUT_215,
	_DOUT_216,
	_DOUT_217,
	_DOUT_3D_CAMERA_POWER_RESET,
	_DOUT_219,
	_DOUT_220,
	_DOUT_221,
	_DOUT_222,
	_DOUT_223,
	_DOUT_224,
	_DOUT_225,
	_DOUT_226,
	_DOUT_227,
	_DOUT_LASER_POINT_1_LEFT,
	_DOUT_LASER_POINT_2_RIGHT,
	_DOUT_BACK_LIGHT_AIR_BLOW_ON,
	_DOUT_GANTRY_Z_AXIS_BLOW,

	_DOUT_TRANSFER_VAC_1_SOL_INPUT = 300,
	_DOUT_TRANSFER_PURGE_1_SOL_INPUT,
	_DOUT_TRANSFER_VAC_2_SOL_INPUT,
	_DOUT_TRANSFER__PURGE_2_SOL_INPUT,
	_DOUT_TRANSFER_VAC_3_SOL_INPUT,
	_DOUT_TRANSFER_PURGE_3_SOL_INPUT,
	_DOUT_TRANSFER_VAC_4_SOL_INPUT,
	_DOUT_TRANSFER_PURGE_4_SOL_INPUT,
	_DOUT_TRANSFER_VAC_1_SOL_OUTPUT,
	_DOUT_TRANSFER_PURGE_1_SOL_OUTPUT,
	_DOUT_TRANSFER_TRANSFER_VAC_2_SOL_OUTPUT,
	_DOUT_TRANSFER_PURGE_2_SOL_OUTPUT,
	_DOUT_TRANSFER_VAC_3_SOL_OUTPUT,
	_DOUT_TRANSFER_PURGE_3_SOL_OUTPUT,
	_DOUT_TRANSFER_VAC_4_SOL_OUTPUT,
	_DOUT_TRANSFER_PURGE_4_SOL_OUTPUT,
	_DOUT_INSPECTION_TABLE_STAGE_INSIDE_VAC_SOL,
	_DOUT_INSPECTION_TABLE_STAGE_INSIDE_PURGE_SOL,
	_DOUT_INSPECTION_TABLE_STAGE_OUTSIDE_VAC_SOL,
	_DOUT_INSPECTION_TABLE_STAGE_OUTSIDE_PURGE_SOL,
	_DOUT_320,
	_DOUT_321,
	_DOUT_322,
	_DOUT_323,
	_DOUT_324,
	_DOUT_325,
	_DOUT_326,
	_DOUT_327,
	_DOUT_328,
	_DOUT_329,
	_DOUT_330,
	_DOUT_331,

	_DOUT_MAX,
}enum_Do;

//AINPUT
typedef enum
{
	_AIN_CDA_MAIN_AIR = 0,
	_AIN_TRANSFER_VAC_PAD_1_INPUT,
	_AIN_TRANSFER_VAC_PAD_2_INPUT,
	_AIN_TRANSFER_VAC_PAD_3_INPUT,
	_AIN_TRANSFER_VAC_PAD_4_INPUT,
	_AIN_TRANSFER_VAC_PAD_1_OUTPUT,
	_AIN_TRANSFER_VAC_PAD_2_OUTPUT,
	_AIN_TRANSFER_VAC_PAD_3_OUTPUT,
	_AIN_TRANSFER_VAC_PAD_4_OUTPUT,
	_AIN_INSPECTION_TABLE_STAGE_VAC_INSIDE,
	_AIN_INSPECTION_TABLE_STAGE_VAC_OUTSIDE,
	_AIN_11,
	_AIN_12,
	_AIN_13,
	_AIN_14,
	_AIN_15,

	_AIN_MAIN_AIR_PRESSURE, // = 100,
	_AIN_SUPPLY_PRESSURE,
	_AIN_GANTRY_X_AXIS_1_PRESSURE,
	_AIN_GANTRY_X_AXIS_2_PRESSURE,
	_AIN_GANTRY_Y_AXIS_1_PRESSURE,
	_AIN_GANTRY_Y_AXIS_2_PRESSURE,
	_AIN_ISOLATOR_1_PRESSURE_ACT_H,
	_AIN_ISOLATOR_2_PRESSURE_ACT_V,
	_AIN_108,
	_AIN_109,
	_AIN_110,
	_AIN_111,
	_AIN_GANTRY_REGULATOR_Y1,
	_AIN_GANTRY_REGULATOR_Y2,
	_AIN_GANTRY_REGULATOR_X_TOP,
	_AIN_GANTRY_REGULATOR_X_BOTTOM,

	_AIN_200, // = 200,
	_AIN_201,
	_AIN_202,
	_AIN_203,
	_AIN_204,
	_AIN_205,
	_AIN_206,
	_AIN_207,
	_AIN_208,
	_AIN_209,
	_AIN_210,
	_AIN_211,
	_AIN_212,
	_AIN_213,
	_AIN_214,
	_AIN_215,

	_AIN_300, // = 300,
	_AIN_301,
	_AIN_302,
	_AIN_303,
	_AIN_304,
	_AIN_305,
	_AIN_306,
	_AIN_307,
	_AIN_308,
	_AIN_309,
	_AIN_310,
	_AIN_311,
	_AIN_312,
	_AIN_313,
	_AIN_314,
	_AIN_315,

	//Strech Tenstion 없어서 일단 임시로 생성. 차후 변경.
	_AIN_STRETCH_L1,
	_AIN_STRETCH_L2,
	_AIN_STRETCH_L3,
	_AIN_STRETCH_L4,
	_AIN_STRETCH_L5,
	_AIN_STRETCH_L6,
	_AIN_STRETCH_L7,
	_AIN_STRETCH_L8,
	_AIN_STRETCH_R1,
	_AIN_STRETCH_R2,
	_AIN_STRETCH_R3,
	_AIN_STRETCH_R4,
	_AIN_STRETCH_R5,
	_AIN_STRETCH_R6,
	_AIN_STRETCH_R7,
	_AIN_STRETCH_R8,

	_AIN_MAX,
}enum_Ai;

//AOUTPUT
typedef enum
{
	_AOUT_0 = 0,
	_AOUT_1,
	_AOUT_2,
	_AOUT_3,
	_AOUT_4,
	_AOUT_5,
	_AOUT_6,
	_AOUT_7,
	_AOUT_8,
	_AOUT_9,
	_AOUT_10,
	_AOUT_11,
	_AOUT_12,
	_AOUT_13,
	_AOUT_14,
	_AOUT_15,
}enum_Ao;

typedef enum
{
	eBOX_DATA_LR = 0,
	eBOX_DATA_LC,
	eBOX_DATA_RESET,
	eBOX_DATA_UR,
	eBOX_DATA_UC,

	eBOX_DATA_INTERFACE_MAX,
}enum_BOX_DATA_INTERFACE;

typedef enum
{
	eAXIS_SPEED_LOW = 0,
	eAXIS_SPEED_MEDIUM,
	eAXIS_SPEED_HIGH,
}enum_AXIS_SPEED;

enum enum_AxisDir
{
	eDIR_NONE,
	eDIR_PLUS,
	eDIR_MINUS
};

typedef enum
{
	eMOVE_DIR_P = 0,
	eMOVE_DIR_N,

	eMOVE_DIR_MAX,
}enum_MoveDir;

typedef enum
{
	FMM_SUCCESS,

	FMM_COMM_ERROR_SIZE,
	FMM_COMM_ERROR_LRC,
	FMM_COMM_ERROR_TRANSACTION_ID,
	FMM_COMM_ERROR_PROTOCOL_ID,
	FMM_COMM_ERROR_UNIT_ID,
	FMM_COMM_ERROR_FC,
	FMM_COMM_FUNCTION_ADDR,
	FMM_COMM_TIME_OUT,

	FMM_MOTION_NOT_HOMING,
	FMM_MOTION_SERVO_OFF,
	FMM_MOTION_IS_ALARM,
	FMM_MOTION_IS_BUSY,
	FMM_MOTION_IS_P_LIMIT,
	FMM_MOTION_IS_N_LIMIT,

	FMM_STRETCH_STEP_COUNT,
	FMM_STRETCH_IS_RUNNING,
	FMM_CLAMP_IS_RUNNING,

	FFMM_RETURN_VALUE_MAX
} en_ULTRA_RETURN_VALUE;

enum //need edit
{
	CAM_SEL_L = 0,
	CAM_SEL_R,
	CAM_SEL_MAX,
};

typedef enum {
	_eGANTRY_AXIS_NONE = -1,

	_eGANTRY_AXIS_GANTRY_X = 0,
	_eGANTRY_AXIS_GANTRY_Y,
	_eGANTRY_AXIS_GANTRY_Z1,
	_eGANTRY_AXIS_GANTRY_Z2,
	_eGANTRY_AXIS_3D_CAMERA_MAIN_Z,
	_eGANTRY_AXIS_3D_CAMERA_SUB_Z,

	_eGANTRY_AXIS_MAX
}enum_Gantry_Axis;

typedef enum {
	_eMANUAL_BOX_AXIS_LOADING_STAGE_X1 = 0,
	_eMANUAL_BOX_AXIS_LOADING_STAGE_X2,
	_eMANUAL_BOX_AXIS_LOADING_STAGE_Y,
	_eMANUAL_BOX_AXIS_BOX_ALIGN_CAMERA_YL,
	_eMANUAL_BOX_AXIS_BOX_ALIGN_CAMERA_YR,

	_eMANUAL_BOX_AXIS_MAX,
}enum_Box_Axis;

typedef enum {
	_eMANUAL_LOADER_AXIS_Z = 0,
	_eMANUAL_LOADER_AXIS_X,

	_eMANUAL_LOADER_AXIS_MAX,
}enum_Loader_Axis;


typedef enum {
	_eGANTRY_X_WAIT_POS = 0,
	_eGANTRY_X_INSPECTION_PPA_POS,
	_eGANTRY_X_INSPECTION_AOI_POS,

	_eGANTRY_Y_WAIT_POS,
	_eGANTRY_Y_STICK_LOAD_POS,
	_eGANTRY_Y_PAPER_UNLOAD_POS,
	_eGANTRY_Y_INSPECTION_PPA_POS,
	_eGANTRY_Y_INSPECTION_AOI_POS,
	_eGANTRY_Y_INSPECTION_REVIEW_POS,
	_eGANTRY_Y_STICK_UNLOAD_POS,

	_eGANTRY_Z1_WAIT_POS,
	_eGANTRY_Z1_PRE_ALIGN_POS,
	_eGANTRY_Z1_INSPECTION_PPA_POS,
	_eGANTRY_Z1_INSPECTION_REVIEW_POS,

	_eGANTRY_Z2_WAIT_POS,
	_eGANTRY_Z2_INSPECTION_AOI_POS,

	_eGANTRY_3D_CAMERA_MAIN_Z_WAIT_POS,

	_eGANTRY_3D_CAMERA_SUB_Z_WAIT_POS,

	_eGANTRY_POS_MAX,
}enum_Gantry_Pos;

typedef enum {
	_eBOX_LOADING_STAGE_X1_WAIT_POS = 0,

	_eBOX_LOADING_STAGE_X2_WAIT_POS ,

	_eBOX_LOADING_STAGE_Y_WAIT_POS,

	_eBOX_BOX_ALIGN_CAMERA_YL_WAIT_POS,
	_eBOX_BOX_ALIGN_CAMERA_YL_MASK_CENTER_POS,

	_eBOX_BOX_ALIGN_CAMERA_YR_WAIT_POS,
	_eBOX_BOX_ALIGN_CAMERA_YR_MASK_CENTER_POS,

	_eBOX_POS_MAX,
}enum_Box_Pos;

typedef enum {
	_eLOADER_Z_WAIT_POS = 0,
	_eLOADER_Z_STICK_LOAD_POS,
	_eLOADER_Z_STICK_LOAD_IN_BOX_POS,
	_eLOADER_Z_PAPER_UNLOAD_POS,
	_eLOADER_Z_STICK_UNLOAD_IN_STAGE_POS,
	//반대로 이송
	_eLOADER_Z_STICK_LOAD_IN_STAGE_POS,
	_eLOADER_Z_STICK_UNLOAD_IN_BOX_POS,

	_eLOADER_POS_MAX,
}enum_Loader_Pos;

typedef enum {
	_eMOVE_TYPE_JOG = 0,
	_eMOVE_TYPE_RELATIVE,
}enum_Move_Type;

enum
{
	eMAPPING_ID_0 = 0,
	eMAPPING_ID_1 = 1,
	eMAPPING_ID_2 = 2,
	eMAPPING_ID_3 = 3,
	eMAPPING_ID_4 = 4,
	eMAPPING_ID_5 = 5,
	eMAPPING_ID_MAX,

};

typedef struct tag_ALARM_LIST
{
	CString AlarmDate;
	CString AlarmTime;
	int  AlarmCode;
	int AlarmLevel;
	CString AlarmText;
}ALARM_LIST, *PALARM_LIST;

typedef struct _MAPPING_TABLE {
	double	dPosX;
	double	dPosY;

	double dErrorX;
	double dErrorY;

	double	dResultX;
	double	dResultY;
}MAPPING_TABLE, *pMAPPING_TABLE;

typedef struct {
	double x;
	double y;
	double z;	// added by ansmoon
}CPointD;


typedef struct _PPA_POS
{
	int nNo;
	double dPosX;
	double dPosY;
	//double dPitchX;
	//double dPitchY;
	double dCdX;
	double dCdY;

	double dResultPpaX;
	double dResultPpaY;
	double dResultPpaZ;

	double dResultCdX;
	double dResultCdY;

	_PPA_POS()
	{
		nNo = 0;
		dPosX = 0.0;
		dPosX = 0.0;
		//dPitchX = 0;
		//dPitchY = 0;
		dCdX = 0;
		dCdY = 0;

		dResultPpaX = 0;
		dResultPpaY = 0;
		dResultPpaZ = 0;

		dResultCdX = 0;
		dResultCdY = 0;
	}
}PPA_POS;

#endif

