#pragma once

#include "BaseMotion.h"

class CUnloaderMotion : public CBaseMotion, public CBaseFlow
{
public:
	CUnloaderMotion();
	~CUnloaderMotion();

private:

	CWinThread*		pMotionThread;
	CWinThread*		pMonitoringThread;
	int				m_nCurStep;
	DWORD			m_dwTimeTick;
	DWORD			m_dwTimeOut;
	BOOL			m_StateFinish;
	void(*m_StateComplete)(void *pArgument);


	VOID			MotionThreadFunctionEntry(VOID);
	static UINT		MotionThreadFunction(LPVOID lpParam);

	VOID			MonitoringThreadFunctionEntry(VOID);
	static UINT		MonitoringThreadFunction(LPVOID lpParam);

	BOOL			m_bStopBit;

public:

	HANDLE			hMotionHandle;

	BOOL			InitProcess();
	BOOL			EndProcess();
	BOOL			Stop();
	//이동 완료 flag
	BOOL			m_bMotionDone;

	BOOL			m_bTerminate;
	BOOL			IsTerminate() { return m_bTerminate; }


	//State 시작
	BOOL			Start();
	enum MOTION_MODE
	{
		eMOTION_ABS = 0,
		eMOTION_REL,
		eMOTION_VEL,
		eMOTION_MAX,
	};

	BOOL IsAxisHome(UINT nAxisNo);

	//////////////////////////////////////////////////////////////////////////
	BOOL MoveAxis(enum_Axis eAxis, double dPos);
	BOOL IsMoveDone(enum_Axis eAxis, double dPos);

	//Unloader Y
	BOOL UnloaderY_WaitPos();
	BOOL UnloaderY_LoadPos();
	BOOL UnloaderY_UnloadPos();

	BOOL Is_UnloaderY_WaitPos();
	BOOL Is_UnloaderY_LoadPos();
	BOOL Is_UnloaderY_UnloadPos();

	//Unloader X
	BOOL UnloaderX_WaitPos();

	BOOL Is_UnloaderX_WaitPos();

	//Unloader Z
	BOOL UnloaderZ_WaitPos();
	BOOL UnloaderZ_LoadPos();
	BOOL UnloaderZ_UnloadPos();

	BOOL Is_UnloaderZ_WaitPos();
	BOOL Is_UnloaderZ_LoadPos();
	BOOL Is_UnloaderZ_UnloadPos();

	enum TUnloaderMotion
	{
		eUNLOADER_MOTION_IDLE = 1,
		eUNLOADER_MOTION_START,

		eUNLOADER_MOTION_DONE,
		eUNLOADER_MOTION_EXIT
	};
};

